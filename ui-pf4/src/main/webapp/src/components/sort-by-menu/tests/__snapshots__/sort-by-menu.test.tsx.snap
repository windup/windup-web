// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Welcome Renders without crashing 1`] = `
<OverflowMenu
  breakpoint="md"
>
  <OverflowMenuItem
    isPersistent={true}
  >
    <Select
      aria-describedby=""
      aria-invalid={false}
      aria-label="Select sort by"
      aria-labelledby="page-layout-table-column-management-action-toolbar-top-select-checkbox-label page-layout-table-column-management-action-toolbar-top-select-checkbox-toggle"
      chipGroupComponent={null}
      className=""
      clearSelectionsAriaLabel="Clear all"
      createText="Create"
      customBadgeText={null}
      customContent={null}
      direction="down"
      favorites={Array []}
      favoritesLabel="Favorites"
      hasInlineFilter={false}
      hasPlaceholderStyle={false}
      inlineFilterPlaceholderText={null}
      inputAutoComplete="off"
      inputIdPrefix=""
      isCreatable={false}
      isCreateSelectOptionObject={false}
      isDisabled={false}
      isGrouped={false}
      isInputFilterPersisted={false}
      isInputValuePersisted={false}
      isOpen={false}
      isPlain={false}
      menuAppendTo="inline"
      noResultsFoundText="No results found"
      onClear={[Function]}
      onCreateOption={[Function]}
      onFilter={null}
      onSelect={[Function]}
      onToggle={[Function]}
      onTypeaheadInputChanged={null}
      ouiaSafe={true}
      placeholderText={
        <React.Fragment>
          <FilterIcon
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
          />
           
          Option1
        </React.Fragment>
      }
      position="left"
      removeSelectionAriaLabel="Remove"
      selections="Option1"
      toggleAriaLabel="Options menu"
      toggleIcon={null}
      toggleId={null}
      typeAheadAriaLabel=""
      validated="default"
      variant="single"
      width=""
    >
      <SelectOption
        className=""
        component="button"
        index={0}
        inputId=""
        isChecked={false}
        isDisabled={false}
        isFavorite={null}
        isLastOptionBeforeFooter={[Function]}
        isLoad={false}
        isLoading={false}
        isNoResultsOption={false}
        isPlaceholder={false}
        isSelected={false}
        key="0"
        keyHandler={[Function]}
        onClick={[Function]}
        sendRef={[Function]}
        setViewMoreNextIndex={[Function]}
        value="Option1"
      />
      <SelectOption
        className=""
        component="button"
        index={0}
        inputId=""
        isChecked={false}
        isDisabled={false}
        isFavorite={null}
        isLastOptionBeforeFooter={[Function]}
        isLoad={false}
        isLoading={false}
        isNoResultsOption={false}
        isPlaceholder={false}
        isSelected={false}
        key="1"
        keyHandler={[Function]}
        onClick={[Function]}
        sendRef={[Function]}
        setViewMoreNextIndex={[Function]}
        value="Option2"
      />
    </Select>
  </OverflowMenuItem>
  <OverflowMenuItem>
    <OptionsMenu
      id="page-layout-table-column-management-action-toolbar-top-options-menu-toggle"
      isPlain={true}
      menuItems={Array []}
      toggle={
        <OptionsMenuToggle
          aria-label="Sort by"
          hideCaret={true}
          onClick={[Function]}
          toggleTemplate={
            <SortAmountDownIcon
              aria-hidden="true"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          }
        />
      }
    />
  </OverflowMenuItem>
</OverflowMenu>
`;
